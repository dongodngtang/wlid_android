package net.doyouhike.app.wildbird.biz.db.dao;

import android.database.sqlite.SQLiteDatabase;

import net.doyouhike.app.wildbird.biz.db.bean.DbComment;
import net.doyouhike.app.wildbird.biz.db.bean.DbImage;
import net.doyouhike.app.wildbird.biz.db.bean.DbWildBird;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class WbDaoSession extends AbstractDaoSession {

    private final DaoConfig wildBirdDaoConfig;
    private final DaoConfig commentDaoConfig;
    private final DaoConfig imageDaoConfig;

    private final WildBirdDao wildBirdDao;
    private final CommentDao commentDao;
    private final ImageDao imageDao;

    public WbDaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        wildBirdDaoConfig = daoConfigMap.get(WildBirdDao.class).clone();
        wildBirdDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);



        wildBirdDao = new WildBirdDao(wildBirdDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);

        registerDao(DbWildBird.class, wildBirdDao);
        registerDao(DbComment.class, commentDao);
        registerDao(DbImage.class, imageDao);
    }
    
    public void clear() {
        wildBirdDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
        imageDaoConfig.getIdentityScope().clear();
    }

    public WildBirdDao getWildBirdDao() {
        return wildBirdDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

}
